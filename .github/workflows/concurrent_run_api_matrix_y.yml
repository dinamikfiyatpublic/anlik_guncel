name: Scraper_concurent_y

on:
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    env:
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_CONNECTION_STRING_BASE: ${{ secrets.PG_CONNECTION_STRING_BASE }}
      PG_VIEW_NAME: ${{ secrets.PG_VIEW_NAME }}
      PG_SUPABASEURL: ${{ secrets.PG_SUPABASEURL }}
      PG_SUPABASEKEY: ${{ secrets.PG_SUPABASEKEY }}
      PG_PROXYPORT: ${{ secrets.PG_PROXYPORT }}
      PG_PROXYUSERNAME: ${{ secrets.PG_PROXYUSERNAME }}
      PG_PROXYPASSWORD: ${{ secrets.PG_PROXYPASSWORD }}
      PROXY_IP: ${{ secrets.PROXY_IP }}
      PROXY_PORT: ${{ secrets.PROXY_PORT }}
      PROXY_USER: ${{ secrets.PROXY_USER }}
      PROXY_PASS: ${{ secrets.PROXY_PASS }}
      NODE_OPTIONS: --unhandled-rejections=strict

    strategy:
      matrix:
        script: [
          "scrape_api_urunlerim_rakipler_kalan1.mjs",
          "scrape_api_urunlerim_rakipler_kalan2.mjs",
          "scrape_api_urunlerim_rakipler_kalan3.mjs",
          "scrape_api_urunlerim_rakipler_kalan4.mjs",
          "scrape_api_urunlerim_rakipler_kalan5.mjs"
        ]

    steps:
      - name: Check if user is authorized
        if: github.actor != github.repository_owner
        run: |
          echo "❌ Unauthorized user: ${{ github.actor }}. Only the repository owner can run this workflow."
          exit 1

      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Install Tailscale
        run: |
          echo "Installing Tailscale"
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start tailscaled
        run: |
          echo "Starting tailscaled"
          sudo tailscaled & sleep 5

      - name: Connect to Tailscale with Auth Key
        run: |
          echo "Connecting to Tailscale"
          sudo tailscale up --authkey=${{ secrets.TS_AUTH_KEY }} \
                            --exit-node=100.77.251.95 \
                            --accept-routes \
                            --accept-dns
          echo "Tailscale connected."
          tailscale ip -4

      - name: Run scraper with Xvfb (Türkiye IP üzerinden)
        run: |
          echo "Running scraper: ${{ matrix.script }}"
          cd tests
          node ${{ matrix.script }}

      - name: Disconnect from Tailscale
        if: always()
        run: |
          echo "Disconnecting from Tailscale"
          sudo tailscale logout
